package com.jsfprohtml5.megaapp.model;

import java.io.Serializable;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

@Entity
@Table(name = "MEGA_USER")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "MegaUser.findAll", query = "SELECT m FROM MegaUser m"),
    @NamedQuery(name = "MegaUser.findById", query = "SELECT m FROM MegaUser m WHERE m.id = :id"),
    @NamedQuery(name = "MegaUser.findByLoginName", query = "SELECT m FROM MegaUser m WHERE m.loginName = :loginName"),
    @NamedQuery(name = "MegaUser.findByFirstName", query = "SELECT m FROM MegaUser m WHERE m.firstName = :firstName"),
    @NamedQuery(name = "MegaUser.findByLastName", query = "SELECT m FROM MegaUser m WHERE m.lastName = :lastName"),
    @NamedQuery(name = "MegaUser.findByPassword", query = "SELECT m FROM MegaUser m WHERE m.password = :password")})
public class MegaUser implements Serializable {
    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "ID")
    private Integer id;
    
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 64)
    @Column(name = "LOGIN_NAME")
    private String loginName;
    
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 32)
    @Column(name = "FIRST_NAME")
    private String firstName;
    
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 32)
    @Column(name = "LAST_NAME")
    private String lastName;
    
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 32)
    @Column(name = "PASSWORD")
    private String password;
    
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "userId")
    private List<BookMegaUser> bookMegaUserList;
    
    @JoinColumn(name = "ROLE_ID", referencedColumnName = "ID")
    @ManyToOne
    private Role roleId;

    public MegaUser() {
    }

    public MegaUser(Integer id) {
        this.id = id;
    }

    public MegaUser(Integer id, String loginName, String firstName, String lastName, String password) {
        this.id = id;
        this.loginName = loginName;
        this.firstName = firstName;
        this.lastName = lastName;
        this.password = password;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getLoginName() {
        return loginName;
    }

    public void setLoginName(String loginName) {
        this.loginName = loginName;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @XmlTransient
    public List<BookMegaUser> getBookMegaUserList() {
        return bookMegaUserList;
    }

    public void setBookMegaUserList(List<BookMegaUser> bookMegaUserList) {
        this.bookMegaUserList = bookMegaUserList;
    }

    public Role getRoleId() {
        return roleId;
    }

    public void setRoleId(Role roleId) {
        this.roleId = roleId;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof MegaUser)) {
            return false;
        }
        MegaUser other = (MegaUser) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.jsfprohtml5.megaapp.model.MegaUser[ id=" + id + " ]";
    }
}
