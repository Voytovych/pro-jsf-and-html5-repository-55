-- Create Table: ROLE
--------------------------------------------------------------------------------
CREATE TABLE ROLE
(
	ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1) 
	,"DESC" VARCHAR(32) NOT NULL
);



-- Create Table: BOOK_MEGA_USER
--------------------------------------------------------------------------------
CREATE TABLE BOOK_MEGA_USER
(
	ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,BOOK_ID INTEGER NOT NULL 
	,USER_ID INTEGER NOT NULL 
	,TRANS_TIME BIGINT NOT NULL
);



-- Create Table: BOOK
--------------------------------------------------------------------------------
CREATE TABLE BOOK
(
	ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,ISBN VARCHAR(64) NOT NULL 
	,TITLE VARCHAR(128) NOT NULL 
	,AUTHOR VARCHAR(128) NOT NULL 
	,PUBLISHER VARCHAR(64) NOT NULL 
	,LANG VARCHAR(64) NOT NULL 
	,CONTENT blob(1M) NOT NULL
);



-- Create Table: MEGA_USER
--------------------------------------------------------------------------------
CREATE TABLE MEGA_USER
(
	ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,LOGIN_NAME VARCHAR(64) NOT NULL 
	,FIRST_NAME VARCHAR(32) NOT NULL 
	,LAST_NAME VARCHAR(32) NOT NULL 
	,PASSWORD VARCHAR(32) NOT NULL 
	,ROLE_ID INTEGER
);



-- Create Table: REQUEST_STATUS
--------------------------------------------------------------------------------
CREATE TABLE REQUEST_STATUS
(
	ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1) 
	, "DESC" VARCHAR(32) NOT NULL
);



-- Create Table: BOOK_REQUEST
--------------------------------------------------------------------------------
CREATE TABLE BOOK_REQUEST
(
	ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1) 
	,BOOK_ID INTEGER NOT NULL 
	,USER_ID INTEGER NOT NULL 
	,REQUEST_TIME BIGINT NOT NULL 
	,RESPONSE_TIME BIGINT NOT NULL 
	,STATUS INTEGER NOT NULL 
	,COMMENT VARCHAR(250) 
);


-- Create Foreign Key: BOOK_MEGA_USER.BOOK_ID -> BOOK.ID
ALTER TABLE BOOK_MEGA_USER ADD CONSTRAINT FK_BOOK_MEGA_USER_BOOK_ID_BOOK_ID FOREIGN KEY (BOOK_ID) REFERENCES BOOK(ID);


-- Create Foreign Key: BOOK_MEGA_USER.USER_ID -> MEGA_USER.ID
ALTER TABLE BOOK_MEGA_USER ADD CONSTRAINT FK_BOOK_MEGA_USER_USER_ID_MEGA_USER_ID FOREIGN KEY (USER_ID) REFERENCES MEGA_USER(ID);


-- Create Foreign Key: BOOK_REQUEST.USER_ID -> MEGA_USER.ID
ALTER TABLE BOOK_REQUEST ADD CONSTRAINT FK_BOOK_REQUEST_USER_ID_MEGA_USER_ID FOREIGN KEY (USER_ID) REFERENCES MEGA_USER(ID);


-- Create Foreign Key: BOOK_REQUEST.BOOK_ID -> BOOK.ID
ALTER TABLE BOOK_REQUEST ADD CONSTRAINT FK_BOOK_REQUEST_BOOK_ID_BOOK_ID FOREIGN KEY (BOOK_ID) REFERENCES BOOK(ID);


-- Create Foreign Key: BOOK_REQUEST.STATUS -> REQUEST_STATUS.ID
ALTER TABLE BOOK_REQUEST ADD CONSTRAINT FK_BOOK_REQUEST_STATUS_REQUEST_STATUS_ID FOREIGN KEY (STATUS) REFERENCES REQUEST_STATUS(ID);


-- Create Foreign Key: MEGA_USER.ROLE_ID -> ROLE.ID
ALTER TABLE MEGA_USER ADD CONSTRAINT FK_MEGA_USER_ROLE_ID_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ID);



